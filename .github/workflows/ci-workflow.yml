name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
    - master
    - develop
  pull_request:

jobs:

  build_application:
    name: Build application
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries

  unit_tests:
    name: Unit test
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install deps
        run: |
          apk add --update nodejs npm libbsd-dev

      - name: Build unit tests
        run: |
          CTEST_OUTPUT_ON_FAILURE=1 make tests-unit

      - name: Generate code coverage
        run: |
          cd tests_unit/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base && \
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture && \
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.info && \
          lcov --directory . -b "$(realpath build/)" --remove coverage.info '*/tests_unit/*' -o coverage.info && \
          genhtml coverage.info -o coverage

      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: tests_unit/coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: ./tests_unit/coverage.info
          flags: unittests
          name: codecov-app-stellar
          fail_ci_if_error: true
          verbose: true

  e2e_tests:
    name: Stellar e2e tests
    strategy:
      matrix:
        device: ["nanos", "nanox", "nanosp", "stax"]
      fail-fast: false
    needs:
      - build_application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Build common js
        run: cd tests_common_js && npm install && npm run build

      - name: Build/Install build js deps
        run: cd tests_zemu && npm install

      - name: Download app binaries
        uses: actions/download-artifact@v3
        with:
          name: compiled_app_binaries
          path: build

      - name: Run zemu tests
        run: cd tests_zemu && npm run test -- -t "\(${{ matrix.device }}\)"

      - name: Upload snapshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.device }}-zemu-snapshots
          path: tests_zemu/snapshots-tmp/
