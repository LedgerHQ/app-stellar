name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

jobs:
  build_debug_app:
    name: Build debug app
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device:
        - path: $NANOS_SDK
          name: nanos
        - path: $NANOX_SDK
          name: nanox
        - path: $NANOSP_SDK
          name: nanosp
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build for ${{ matrix.device.name }}
        run: |
          make BOLOS_SDK=${{ matrix.device.path }} DEBUG=1

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: stellar-app-${{ matrix.device.name }}-debug
          path: bin

  scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    needs: build_debug_app

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  unit_tests:
    name: Unit test
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          
      - name: Build unit tests
        run: |
          make tests-unit

      - name: Generate code coverage
        run: |
          cd tests_unit/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base && \
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture && \
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.info && \
          lcov --directory . -b "$(realpath build/)" --remove coverage.info '*/tests_unit/*' -o coverage.info && \
          genhtml coverage.info -o coverage

      - uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: tests_unit/coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: ./tests_unit/coverage.info
          flags: unittests
          name: codecov-app-stellar
          fail_ci_if_error: true
          verbose: true

  e2e_tests:
    name: e2e tests
    strategy:
      matrix:
        device: ["nanos", "nanox", "nanosp"]
      fail-fast: false
    needs: 
      - build_debug_app
      - unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Build common js
        run: cd tests_common_js && npm install && npm run build

      - name: Build/Install build js deps
        run: cd tests_zemu && npm install

      - name: Download app binaries
        uses: actions/download-artifact@v2
        with:
          name: stellar-app-${{ matrix.device }}-debug
          path: stellar-app-${{ matrix.device }}-debug

      - name: Gather elf
        run: |
          cp ./stellar-app-${{ matrix.device }}-debug/app.elf ./tests_zemu/elfs/stellar_${{ matrix.device }}.elf

      - name: Run zemu tests
        run: cd tests_zemu && npm run test -- -t "\(${{ matrix.device }}\)"

      - name: Upload snapshots
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: zemu-snapshots
          path: tests_zemu/snapshots-tmp/