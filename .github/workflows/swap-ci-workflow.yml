# https://github.com/LedgerHQ/app-exchange/blob/develop/.github/workflows/ci-workflow.yml
name: Swap function tests

on:
  workflow_dispatch:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop


jobs:
  build_sideloaded_apps:
    strategy:
      matrix:
        sdk:
        - path: $NANOS_SDK
          name: nanos
        - path: $NANOX_SDK
          name: nanox
        - path: $NANOSP_SDK
          name: nanosp
        coin:
        - name: tezos
          repo: LedgerHQ/app-tezos
        - name: xrp
          repo: LedgerHQ/app-xrp
        - name: ethereum
          repo: LedgerHQ/app-ethereum
        - name: litecoin
          repo: LedgerHQ/app-bitcoin-new
        - name: bitcoin
          repo: LedgerHQ/app-bitcoin-new

    name: Build App
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone ${{ matrix.coin.repo }} for coin ${{ matrix.coin.name }}
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.coin.repo }}
          ref: develop

      - name: Build in ${{ matrix.coin.repo }} coin ${{ matrix.coin.name }} for SDK ${{ matrix.sdk.name }}
        run: |
          make clean ; make COIN=${{ matrix.coin.name }} BOLOS_SDK=${{ matrix.sdk.path }}
          cp bin/app.elf ${{ matrix.coin.name }}_${{ matrix.sdk.name }}.elf
      - name: Upload ${{ matrix.coin.name }} binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.coin.name }}_binaries
          path: ./*.elf
          if-no-files-found: error

  build_stellar_app:
    strategy:
      matrix:
        sdk:
        - path: $NANOS_SDK
          name: nanos
        - path: $NANOX_SDK
          name: nanox
        - path: $NANOSP_SDK
          name: nanosp

    name: Build Stellar App
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build for SDK ${{ matrix.sdk.name }}
        run: |
          make clean ; make BOLOS_SDK=${{ matrix.sdk.path }}
          cp bin/app.elf stellar_${{ matrix.sdk.name }}.elf
      - name: Upload stellar binaries
        uses: actions/upload-artifact@v2
        with:
          name: stellar_binaries
          path: ./*.elf
          if-no-files-found: error

  build_exchange:
    name: Build Exchange
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [{path: $NANOS_SDK, name: nanos}, {path: $NANOX_SDK, name: nanox}, {path: $NANOSP_SDK, name: nanosp}]

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          repository: "LedgerHQ/app-exchange"
          ref: "b3bf722138c19453bc9bef59e1b421cf0f5e8328"

      - name: Build Exchange
        run: |
          make clean ; make BOLOS_SDK=${{ matrix.sdk.path }} TESTING=1 TEST_PUBLIC_KEY=1
          cp bin/app.elf exchange_${{ matrix.sdk.name }}.elf
      - name: Upload Exchange binaries
        uses: actions/upload-artifact@v2
        with:
          name: exchange_binaries
          path: ./*.elf
          if-no-files-found: error

  e2e_tests:
    name: e2e tests
    strategy:
      matrix:
        device: ["Nano S", "Nano X", "Nano SP"]
    needs:
      - build_exchange
      - build_sideloaded_apps
      - build_stellar_app
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          repository: "LedgerHQ/app-exchange"
          ref: "b3bf722138c19453bc9bef59e1b421cf0f5e8328"

      - name: Install APT dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install JS dependencies
        run: cd test && yarn install

      - name: Upgrade @zondax/zemu
        run: cd test && yarn upgrade @zondax/zemu@0.32.0

      - name: Download all binaries
        uses: actions/download-artifact@v2

      - name: Gather artifacts
        run: |
          mkdir test/elfs
          mv *_binaries/*.elf test/elfs
      - name: Run zemu tests for device ${{ matrix.device }}
        run: cd test && yarn test -t "\[${{ matrix.device }}\]"
